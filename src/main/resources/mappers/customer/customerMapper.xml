<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jewelry.customer.mapper.CustomerMapper">
	
	<sql id="customer-search">
		<if test='searchstdt != null and !searchstdt.equals("")'>
			AND DATE_FORMAT(a.reg_dt, '%Y-%m-%d') <![CDATA[ >= ]]> STR_TO_DATE(#{searchstdt}, '%Y-%m-%d')
		</if>
		<if test='searcheddt != null and !searcheddt.equals("")'>
			AND DATE_FORMAT(a.reg_dt, '%Y-%m-%d') <![CDATA[ <= ]]> STR_TO_DATE(#{searcheddt}, '%Y-%m-%d')
		</if>
		<!-- 검색 키워드가 있을 때 -->
		<if test='searchword != null and !searchword.equals("")'>
			<choose>
				<!-- 검색 유형이 없을 때 -->
				<when test='searchtype == null or searchtype.equals("")'>
					AND (
						a.contractor_nm LIKE CONCAT('%', <![CDATA[ #{searchword} ]]>, '%')
						OR a.contractor_cel LIKE CONCAT('%', <![CDATA[ #{searchword} ]]>, '%')
					)
				</when>
			</choose>
		</if>
	</sql>
	
	<select id="selectCustomerListCount" parameterType="CustomerTO" resultType="Integer">
		SELECT COUNT(a.customer_no)
		FROM tb_customer a
		WHERE a.del_yn = 'N'
		<include refid="customer-search" />
	</select>
	
	<select id="selectCustomerList" parameterType="CustomerTO" resultType="CustomerVO">
		SELECT a.customer_no, a.store_cd, a.contract_cd, a.zipcode, a.address1, a.address2, a.etc
						, a.contractor_nm, a.contractor_gen, a.contractor_cel, a.contractor_birth, a.contractor_lunar, a.contractor_email
		        , a.del_yn, a.reg_dt, a.inpt_dt
		        
		        , IFNULL(b.order_cnt, 0) AS order_cnt, IFNULL(b.reserve_cnt, 0) AS reserve_cnt, IFNULL(c.repair_cnt, 0) AS repair_cnt
		        , IFNULL(d.sale_cnt, 0) AS sale_cnt, IFNULL(d.sale_price, 0) AS sale_price
		FROM tb_customer a
			LEFT OUTER JOIN (
				SELECT customer_no
								, COUNT(customer_no) AS order_cnt
								, SUM(IF(order_step = 'B', 1, 0)) AS reserve_cnt
				FROM tb_order
				WHERE del_yn = 'N'
				GROUP BY customer_no
			) b
				ON a.customer_no = b.customer_no
			LEFT OUTER JOIN (
				SELECT customer_no, COUNT(*) AS repair_cnt
				FROM tb_repair
				WHERE del_yn = 'N'
				GROUP BY customer_no
			) c
				ON a.customer_no = c.customer_no
			LEFT OUTER JOIN (
				SELECT customer_no
								, COUNT(customer_no) AS sale_cnt
								, SUM(sale_price) AS sale_price
				FROM tb_stock
				WHERE IFNULL(customer_no, 0) > 0
				AND sale_yn = 'Y'
				AND del_yn = 'N'
				GROUP BY customer_no
			) d
				ON a.customer_no = d.customer_no
		WHERE a.del_yn = 'N'
		<include refid="customer-search" />
		ORDER BY a.reg_dt DESC
		<include refid="commonMapper.paging" />
	</select>
	
	<select id="selectCustomer" parameterType="CustomerTO" resultType="CustomerVO">
		SELECT a.customer_no, a.store_cd, a.contract_cd, a.zipcode, a.address1, a.address2, a.etc
						, a.contractor_nm, a.contractor_gen, a.contractor_cel, a.contractor_birth, a.contractor_lunar, a.contractor_email
		        , a.del_yn, a.reg_dt, a.inpt_dt
		FROM tb_customer a
		WHERE a.customer_no = #{customer_no}
	</select>
	
	<insert id="insertCustomer" parameterType="CustomerTO">
		INSERT INTO tb_customer
		(
			inpt_id, inpt_dt
			<if test='store_cd != null and !store_cd.equals("")'>, store_cd</if>
			<if test='contract_cd != null and !contract_cd.equals("")'>, contract_cd</if>
			<if test='contractor_nm != null and !contractor_nm.equals("")'>, contractor_nm</if>
			<if test='contractor_gen != null and !contractor_gen.equals("")'>, contractor_gen</if>
			<if test='contractor_cel != null and !contractor_cel.equals("")'>, contractor_cel</if>
			<if test='contractor_birth != null and !contractor_birth.equals("")'>, contractor_birth</if>
			<if test='contractor_lunar != null and !contractor_lunar.equals("")'>, contractor_lunar</if>
			<if test='contractor_email != null and !contractor_email.equals("")'>, contractor_email</if>
			<if test='zipcode != null and !zipcode.equals("")'>, zipcode</if>
			<if test='address1 != null and !address1.equals("")'>, address1</if>
			<if test='address2 != null and !address2.equals("")'>, address2</if>
			<if test='etc != null and !etc.equals("")'>, etc</if>
			<if test='del_yn != null and !del_yn.equals("")'>, del_yn</if>
			<if test='reg_dt != null and !reg_dt.equals("")'>, reg_dt</if>
		)
		VALUES (
			#{inpt_id}, NOW()
			<if test='store_cd != null and !store_cd.equals("")'>, #{store_cd}</if>
			<if test='contract_cd != null and !contract_cd.equals("")'>, #{contract_cd}</if>
			<if test='contractor_nm != null and !contractor_nm.equals("")'>, #{contractor_nm}</if>
			<if test='contractor_gen != null and !contractor_gen.equals("")'>, #{contractor_gen}</if>
			<if test='contractor_cel != null and !contractor_cel.equals("")'>, #{contractor_cel}</if>
			<if test='contractor_birth != null and !contractor_birth.equals("")'>, #{contractor_birth}</if>
			<if test='contractor_lunar != null and !contractor_lunar.equals("")'>, #{contractor_lunar}</if>
			<if test='contractor_email != null and !contractor_email.equals("")'>, #{contractor_email}</if>
			<if test='zipcode != null and !zipcode.equals("")'>, #{zipcode}</if>
			<if test='address1 != null and !address1.equals("")'>, #{address1}</if>
			<if test='address2 != null and !address2.equals("")'>, #{address2}</if>
			<if test='etc != null and !etc.equals("")'>, #{etc}</if>
			<if test='del_yn != null and !del_yn.equals("")'>, #{del_yn}</if>
			<if test='reg_dt != null and !reg_dt.equals("")'>, #{reg_dt}</if>
		)
	</insert>
	
	<update id="updateCustomer" parameterType="CustomerTO">
		UPDATE tb_customer
		SET updt_dt = NOW()
		, updt_id = #{updt_id}
		<if test='store_cd != null and !store_cd.equals("")'>, store_cd = #{store_cd}</if>
		<if test='contract_cd != null and !contract_cd.equals("")'>, contract_cd = #{contract_cd}</if>
		, contractor_nm = #{contractor_nm}
		, contractor_gen = #{contractor_gen}
		, contractor_cel = #{contractor_cel}
		, contractor_birth = #{contractor_birth}
		, contractor_lunar = #{contractor_lunar}
		, contractor_email = #{contractor_email}
		, zipcode = #{zipcode}
		, address1 = #{address1}
		, address2 = #{address2}
		, etc = #{etc}
		<if test='reg_dt != null and !reg_dt.equals("")'>, reg_dt = #{reg_dt}</if>
		WHERE customer_no = #{customer_no}
	</update>
	
	<update id="updateCustomerToDelete" parameterType="CustomerTO">
		UPDATE tb_customer
		SET updt_dt = NOW()
		, updt_id = #{updt_id}
		, del_yn = 'Y'
		WHERE customer_no = #{customer_no}
	</update>
	
</mapper>