<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jewelry.repair.mapper.RepairMapper">

	<sql id="repair-search">

		<if test='searchstdt != null and !searchstdt.equals("")'>
			AND DATE_FORMAT(a.repair_req_dt, '%Y-%m-%d') <![CDATA[ >= ]]> STR_TO_DATE(#{searchstdt}, '%Y-%m-%d')
		</if>
		<if test='searcheddt != null and !searcheddt.equals("")'>
			AND DATE_FORMAT(a.repair_req_dt, '%Y-%m-%d') <![CDATA[ <= ]]> STR_TO_DATE(#{searcheddt}, '%Y-%m-%d')
		</if>
		
		<!-- 검색 키워드가 있을 때 -->
		<if test='searchword != null and !searchword.equals("")'>
			AND a.repair_nm LIKE CONCAT('%', #{searchword}, '%')
		</if>
	</sql>

	<select id="selectRepairListCount" parameterType="RepairTO" resultType="Integer">
		SELECT COUNT(a.repair_no)
		FROM tb_repair a
		WHERE a.del_yn = 'N'
		<include refid="repair-search" />
	</select>
	
	<select id="selectRepairList" parameterType="RepairTO" resultType="RepairVO">
		SELECT a.repair_no, a.repair_nm, a.repair_req_dt, a.repair_due_dt, a.repair_res_dt, a.customer_no, a.customer_nm, a.customer_cel
						, b.file_path, b.origin_nm, b.file_nm
		FROM tb_repair a
			LEFT OUTER JOIN tb_file b
				ON a.repair_no = b.ref_no
				AND b.ref_info = 'REPAIR'
				AND b.file_ord = 1
				AND b.del_yn = 'N'
		WHERE a.del_yn = 'N'
		<include refid="repair-search" />
		ORDER BY a.repair_req_dt DESC, a.repair_no DESC
		<include refid="commonMapper.paging" />
	</select>
	
	<insert id="insertRepair" parameterType="RepairTO" useGeneratedKeys="true" keyProperty="repair_no" keyColumn="repair_no">
		INSERT INTO tb_repair (
			inpt_id, inpt_dt
			<if test='repair_nm != null and !repair_nm.equals("")'>, repair_nm</if>
			<if test='repair_req_dt != null and !repair_req_dt.equals("")'>, repair_req_dt</if>
			<if test='repair_due_dt != null and !repair_due_dt.equals("")'>, repair_due_dt</if>
			<if test='repair_desc != null and !repair_desc.equals("")'>, repair_desc</if>
			<if test='customer_no != null and customer_no > 0'>, customer_no</if>
			<if test='customer_nm != null and !customer_nm.equals("")'>, customer_nm</if>
			<if test='customer_cel != null and !customer_cel.equals("")'>, customer_cel</if>
		)
		VALUES (
			#{inpt_id}, NOW()
			<if test='repair_nm != null and !repair_nm.equals("")'>, #{repair_nm}</if>
			<if test='repair_req_dt != null and !repair_req_dt.equals("")'>, #{repair_req_dt}</if>
			<if test='repair_due_dt != null and !repair_due_dt.equals("")'>, #{repair_due_dt}</if>
			<if test='repair_desc != null and !repair_desc.equals("")'>, #{repair_desc}</if>
			<if test='customer_no != null and customer_no > 0'>, #{customer_no}</if>
			<if test='customer_nm != null and !customer_nm.equals("")'>, #{customer_nm}</if>
			<if test='customer_cel != null and !customer_cel.equals("")'>, #{customer_cel}</if>
		)
	</insert>
	
	<select id="selectRepair" parameterType="Long" resultType="RepairVO">
		SELECT a.repair_no, a.repair_nm, a.repair_req_dt, a.repair_due_dt, a.repair_res_dt, a.repair_desc
						, a.customer_no, a.customer_nm, a.customer_cel
		FROM tb_repair a
		WHERE a.repair_no = #{repair_no}
	</select>
	
	<update id="updateRepair" parameterType="RepairTO">
		UPDATE tb_repair
		SET updt_dt = NOW()
		, updt_id = #{updt_id} 
		, repair_nm = #{repair_nm}
		, repair_req_dt = #{repair_req_dt}
		, repair_due_dt = #{repair_due_dt}
		, repair_desc = #{repair_desc}
		, customer_no = #{customer_no}
		, customer_nm = #{customer_nm}
		, customer_cel = #{customer_cel}
		WHERE repair_no = #{repair_no}
	</update>
	
	<update id="updateRepairToDelete" parameterType="RepairTO">
		UPDATE tb_repair
		SET updt_dt = NOW()
		, updt_id = #{updt_id} 
		, del_yn = 'Y'
		WHERE repair_no = #{repair_no}
	</update>
	
	<update id="updateRepairsToDelete" parameterType="RepairTO">
		UPDATE tb_repair
		SET updt_dt = NOW()
		, updt_id = #{updt_id}
		, del_yn = 'Y'
		WHERE repair_no IN (
			<foreach collection="repair_no_arr" item="item" separator=" , ">
				#{item}
			</foreach>
		)
	</update>
	
	<update id="updateRepairsToComplete" parameterType="RepairTO">
		UPDATE tb_repair
		SET updt_dt = NOW()
		, updt_id = #{updt_id}
		, repair_res_dt = NOW()
		WHERE repair_no IN (
			<foreach collection="repair_no_arr" item="item" separator=" , ">
				#{item}
			</foreach>
		)
	</update>
	
	<select id="selectCustomerRepairListCount" parameterType="RepairTO" resultType="Integer">
		SELECT COUNT(a.repair_no)
		FROM tb_repair a
		WHERE a.customer_no = #{customer_no}
		AND a.del_yn = 'N'
		<include refid="repair-search" />
	</select>
	
	<select id="selectCustomerRepairList" parameterType="RepairTO" resultType="RepairVO">
		SELECT a.repair_no, a.repair_nm, a.repair_req_dt, a.repair_due_dt, a.repair_res_dt, a.customer_no, a.customer_nm, a.customer_cel
						, b.file_path, b.origin_nm, b.file_nm
		FROM tb_repair a
			LEFT OUTER JOIN tb_file b
				ON a.repair_no = b.ref_no
				AND b.ref_info = 'REPAIR'
				AND b.file_ord = 1
				AND b.del_yn = 'N'
		WHERE a.customer_no = #{customer_no}
		AND a.del_yn = 'N'
		<include refid="repair-search" />
		ORDER BY a.repair_req_dt DESC, a.repair_no DESC
		<include refid="commonMapper.paging" />
	</select>
	
</mapper>